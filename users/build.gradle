plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'cn.sdack.go'
version = '1.0'

java {
    sourceCompatibility = '17'
}
ext{
    set('snippetsDir', file("build/generated-snippets"))

}
configurations {
    asciidoctorExt
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'
    implementation "com.alibaba:druid-spring-boot-starter:1.2.4"
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    implementation 'cn.hutool:hutool-core:5.8.23'
//    implementation 'io.swagger.core.v3:swagger-core:2.2.20'
    implementation([project(':common')]) {
        exclude group: 'org.springframework.boot'
    }

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    configurations "asciidoctorExt"

    inputs.dir snippetsDir
    dependsOn test
}

